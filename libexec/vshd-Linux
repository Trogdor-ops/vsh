#
# This is supposed to be sourced by the vshd-script
#

###
# vsh_cttoname ct
#
# Try to look up the name of ct
###

vsh_cttoname() {
  tmp_ct=$1

  vsh_return=""

  tmp_proto=`echo $ct | sed 's/^\([^:]*\):.*/\1/'`
  tmp_ct=`echo $ct | sed 's/^[^:]*:\(.*\)/\1/'`

  case "$tmp_proto" in
    ssh)
      # Return alias for ssh-path
      vsh_return=`grep "${ct}$" $vshdproxy | awk '{print $1}' | head -1`  
      ;;
    vsh)
      # Use 'vsh -l' to get cointainer name for vsh-proxied clients
      $VSH_BIN -lll | awk '{print $3"="$2}' | awk -F= '/^'${tmp_ct}'=/{print $2}'
      ;;
    lxc)
      vsh_return=$(lxc-info -n $tmp_ct -H | grep ^Name: | awk '{print $2}')
      ;;
    *)
      # No proto, assume it is an OpenVZ container
      if type prlctl > /dev/null 2>&1
      then
        vsh_return=`prlctl list -ao hostname $tmp_ct | tail -n +2 2> /dev/null` > /dev/null
      else
        vsh_return=`vzlist -Hato hostname $tmp_ct 2> /dev/null` > /dev/null
      fi
      ;;
   esac
}

###
# vsh_movect live|offline <ct> <host>
#
# Try to move a container to another host
###

vsh_movect() {
  mode=$1
  ct=$2
  otherhost=$3

  if [[ $ct == "lxc:"* ]]
  then
    echo "### Sorry. Migrating LXC containers not implemented, yet."
    exit
  fi

  case "$mode" in
    offline)
      live=""
      ;;
    live)
      if type prlctl > /dev/null 2>&1
      then
        #live=`prlctl list -ao status,hostname | tail -n +2 | grep " ${ct}\$" | awk '{print $1}'`
        live="JUNK"
      elif type vzlist > /dev/null 2>&1
      then
        live=`vzlist -Hat | grep " ${ct}\$" | awk '{print $3}'`
      fi
      if [ "$live" = "running" ]; then
        live="--live"
      else
        live=""
      fi
      ;;
  esac

  if type prlctl > /dev/null 2>&1
  then
    prlctl migrate $ct $otherhost --ssh="-o BatchMode=yes -o StrictHostKeyChecking=no"
  elif type vzmigrate > /dev/null 2>&1
  then
    vzmigrate --ssh="-o BatchMode=yes -o StrictHostKeyChecking=no" --remove-area no --keep-dst $live $otherhost $ct
  fi
}

###
# vsh_list
#
# Write a list of containers/zones/jails/clients on stdout as:
# vshd-hostname container container-id status
###

vsh_list() {
    # List Virtuozzo/OpenVZ containers
    if type prlctl > /dev/null 2>&1
    then
      (prlctl list -ao hostname,ctid,status | tail -n +2 | sed "s/^/`hostname` /")
    elif type vzlist > /dev/null 2>&1
    then
      (vzlist -Hat -o hostname,ctid,status | sed "s/^/`hostname` /")
    fi

    # List LXC containers
    if type lxc-ls > /dev/null 2>&1
    then
      (lxc-ls -f -F name,name,state | tail -n +2 | awk '{print "'$(hostname)'",$1,"lxc:"$2,$3}')
    fi
}

###
# vsh_login(username,container[,command])
#
#
###

vsh_login() {
  tmp_user=$1
  tmp_ct=$2
  tmp_ccmd=$3

  if [ "$tmp_user" = "root" ]; then
    # Run as root
    if [ "$ccmd" = "" ]
    then
      # Empty command means we want a shell
      # Are we trying to enter an LXC container?
      if [[ $tmp_ct == "lxc:"* ]]
      then
	tmp_ct=$(echo $tmp_ct | sed 's/^lxc://')
        lxc-attach -n $tmp_ct -- bash -i
      else
        # Try enter OpenVZ container
        if type prlctl > /dev/null 2>&1
        then
          prlctl enter $tmp_ct
        elif type vzctl > /dev/null 2>&1
        then
          vzctl --quiet enter $tmp_ct
        fi
      fi
    else
      # Execute command (try LXC, fallback on Virtuozzo/OpenVZ)
      if [[ $tmp_ct == "lxc:"* ]]
      then
	tmp_ct=$(echo $tmp_ct | sed 's/^lxc://')
        lxc-attach -n $tmp_ct -- $tmp_ccmd
      else
        if type prlctl > /dev/null 2>&1
        then
          prlctl exec $tmp_ct $tmp_ccmd
        elif type vzctl > /dev/null 2>&1
        then
          vzctl --quiet exec $tmp_ct $tmp_ccmd
        fi
      fi
    fi
  else
    if [[ $tmp_ct == "lxc:"* ]]
    then
      echo "### Sorry. Entering LXC containers as a user not implemented, yet."
      exit
    fi
    # Run as user in $tmp_user
    if [ "$tmp_ccmd" = "" ]
    then
      # "enter" will give you a tty but this will
      # also echo the 'su' command.
      # Ugly, but it works.
      #FIXME for prlctl
      vzctl --quiet enter $tmp_ct --exec exec su - $tmp_user
    else
      vzctl --quiet exec $tmp_ct su - $tmp_user -- -c \'"$tmp_ccmd"\'
    fi
  fi
}

###
# vsh_start(container)
#
# Start a container
###

vsh_start() {
  tmp_ct=$1

  # Find container to start (grep first that match)
  tmp_ct=$(vsh_list | grep " $tmp_ct " | awk '{print $3}' | head -1)

  if [[ $tmp_ct == "lxc:"* ]]
  then
   tmp_ct=$(echo $tmp_ct | sed 's/^lxc://')
   lxc-start -n $tmp_ct -d
  else
    # Try with Virtuozzo/OpenVZ
    if type prlctl > /dev/null 2>&1
    then
      prlctl start $tmp_ct
    elif type vzctl > /dev/null 2>&1
    then
      vzctl start $tmp_ct
    fi
  fi
}

###
# vsh_stop(container)
#
# Stop a container
###

vsh_stop() {
  tmp_ct=$1

  # Find container to start (grep first that match)
  tmp_ct=$(vsh_list | grep " $tmp_ct " | awk '{print $3}' | head -1)

  if [[ $tmp_ct == "lxc:"* ]]
  then
   tmp_ct=$(echo $tmp_ct | sed 's/^lxc://')
   lxc-stop -n $tmp_ct
  else
    # Try with OpenVZ as default
    if type prlctl > /dev/null 2>&1
    then
      prlctl stop $tmp_ct
    elif type vzctl > /dev/null 2>&1
    then
      vzctl stop $tmp_ct
    fi
  fi
}
