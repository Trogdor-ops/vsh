#
# This is supposed to be sourced by the vshd-script
#

###
# vsh_movect live|offline <ct> <host>
#
# Try to move a container to another host
###

vsh_movect() {
  mode=$1
  ct=$2
  otherhost=$3

  case "$mode" in
    offline)
      live=""
      ;;
    live)
      live=`vzlist -Hat | grep " ${ct}\$" | awk '{print $3}'`
      if [ "$live" = "running" ]; then
        live="--live"
      else
        live=""
      fi
      ;;
  esac

  vzmigrate --ssh="-o BatchMode=yes -o StrictHostKeyChecking=no" --remove-area no --keep-dst $live $otherhost $ct
}

###
# vsh_runas user ct
#
# Check which user to run as in ct
###

vsh_runas() {
  export tmp_user=$1
  export tmp_ct=$2

  # Create search-string from ini-file
  searchuser_str=`
    # Get all non-coment lines
    grep -v "^#" $vshdini | \

    # Print lines under [groups]
    awk '/^\[/{p=0}/^\[groups\]$/{p=1}{if(p)print "@"$0","}' | \
    egrep -v '^\[|^,$' | \

    # Grep for current user
    grep "[:,]$tmp_user," | \

    # Make search-string from groups and user.
    awk -F: '{printf "^"$1"=.*$|"}END{print "^"ENVIRON["tmp_user"]".*$"}'`

  vsh_return=`
    # Search the containers for user/group return user to run as
    grep -v "^#" $vshdini | \

    # Print lines under [containers]
    awk '/^\[/{p=0}/^\[containers\]$/{p=1}{if(p)print $0}' | \
    egrep -v '^\[|^$' | \

    # Get container or *
    egrep "^$tmp_ct:|^\*:" | \

    # Get the list of all users/groups
    cut -d: -f2|tr , '\012' | \

    # Try to find user or users groups
    egrep $searchuser_str | \

    # Only parse lines where there is a runas-user set
    grep = | cut -d= -f2`

  [ "$vsh_return" = "" ] && vsh_return="root"
}

###
# vsh_list
#
# Write a list of containers/zones/jails/clients on stdout as:
# vshd-hostname container container-id status
###

vsh_list() {
    (vzlist -Hat -o hostname,ctid,status | sed "s/^/`hostname`\t/")
}

###
# vsh_login(username,container[,command])
#
#
###

vsh_login() {
  tmp_user=$1
  tmp_ct=$2
  tmp_ccmd=$3

  if [ "$tmp_user" = "root" ]; then
    # Run as root
    if [ "$ccmd" = "" ]
    then
      vzctl --quiet enter $tmp_ct
    else
      vzctl --quiet exec $tmp_ct $tmp_ccmd
    fi
  else
    # Run as user in $tmp_user
    if [ "$tmp_ccmd" = "" ]
    then
      # "enter" will give you a tty but this will
      # also echo the 'su' command.
      # Ugly, but it works.
      vzctl --quiet enter $tmp_ct --exec exec su - $tmp_user
    else
      vzctl --quiet exec $tmp_ct su - $tmp_user -- -c \'"$tmp_ccmd"\'
    fi
  fi
}

###
# vsh_start(container)
#
# Start a container
###

vsh_start() {
  tmp_ct=$1
  vzctl start $tmp_ct
}

###
# vsh_stop(container)
#
# Stop a container
###

vsh_stopo() {
  tmp_ct=$1
  vzctl stop $tmp_ct
}
